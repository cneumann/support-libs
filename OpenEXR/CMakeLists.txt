
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

IF(OPENEXR_SRC_DIR AND ILMBASE_SRC_DIR)

    PROJECT(OPENEXR)

    SET(HALF_TARGET_NAME_SHARED ilmhalf)
    SET(HALF_TARGET_NAME_STATIC libilmhalf)

    SET(IEX_TARGET_NAME_SHARED ilmiex)
    SET(IEX_TARGET_NAME_STATIC libilmiex)

    SET(IMATH_TARGET_NAME_SHARED ilmimath)
    SET(IMATH_TARGET_NAME_STATIC libilmimath)

    SET(ILMTHREAD_TARGET_NAME_SHARED ilmthread)
    SET(ILMTHREAD_TARGET_NAME_STATIC libilmthread)

    SET(ILMIMF_TARGET_NAME_SHARED ilmimf)
    SET(ILMIMF_TARGET_NAME_STATIC libilmimf)

    IF(SEPARATE_INSTALL_DIRS)
        SET(OPENEXR_RUNTIME_INSTALL_DIR "OpenEXR/bin")
        SET(OPENEXR_LIBRARY_INSTALL_DIR "OpenEXR/lib")
        SET(OPENEXR_ARCHIVE_INSTALL_DIR "OpenEXR/lib")
        SET(OPENEXR_HEADER_INSTALL_DIR  "OpenEXR/include/OpenEXR")
    ELSE(SEPARATE_INSTALL_DIRS)
        SET(OPENEXR_RUNTIME_INSTALL_DIR "bin")
        SET(OPENEXR_LIBRARY_INSTALL_DIR "lib")
        SET(OPENEXR_ARCHIVE_INSTALL_DIR "lib")
        SET(OPENEXR_HEADER_INSTALL_DIR  "include/OpenEXR")
    ENDIF(SEPARATE_INSTALL_DIRS)

    ## eLut generator program
    SET(ELUT_TARGET_NAME eLut)
    SET(ELUT_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Half/eLut.cpp")
    ADD_EXECUTABLE(${ELUT_TARGET_NAME} ${ELUT_CXX_SRC_FILES})
    GET_TARGET_PROPERTY(ELUT_COMMAND ${ELUT_TARGET_NAME} LOCATION)
    
    SET(ELUT_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/eLut.h")

    ADD_CUSTOM_COMMAND(
        OUTPUT "${ELUT_OUTPUT}"
        COMMAND "${ELUT_COMMAND}" ">" "${ELUT_OUTPUT}"
        COMMAND "${CMAKE_COMMAND}" "-E" "echo" "Generating ${ELUT_OUTPUT}"
        DEPENDS ${ELUT_TARGET_NAME}
        COMMENT "Generating eLut.h")

    ## toFloat generator program
    SET(TOFLOAT_TARGET_NAME toFloat)
    SET(TOFLOAT_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Half/toFloat.cpp")
    ADD_EXECUTABLE(${TOFLOAT_TARGET_NAME} ${TOFLOAT_CXX_SRC_FILES})
    GET_TARGET_PROPERTY(TOFLOAT_COMMAND ${TOFLOAT_TARGET_NAME} LOCATION)

    SET(TOFLOAT_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/toFloat.h")

    ADD_CUSTOM_COMMAND(
        OUTPUT "${TOFLOAT_OUTPUT}"
        COMMAND "${TOFLOAT_COMMAND}" ">" "${TOFLOAT_OUTPUT}"
        COMMAND "${CMAKE_COMMAND}" "-E" "echo" "Generating ${TOFLOAT_OUTPUT}"
        DEPENDS ${TOFLOAT_TARGET_NAME}
        COMMENT "Generating toFLoat.h")

    ADD_CUSTOM_TARGET(HALF_GENERATED_FILES DEPENDS "${ELUT_OUTPUT}" "${TOFLOAT_OUTPUT}")

    ## createDLL helper program
    SET(CREATEDLL_TARGET_NAME createDLL)
    SET(CREATEDLL_CXX_SRC_FILES)
    LIST(APPEND CREATEDLL_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/vc/createDLL/createDLL.cpp")
    LIST(APPEND CREATEDLL_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/vc/createDLL/OptionParser.cpp")
    ADD_EXECUTABLE(${CREATEDLL_TARGET_NAME} ${CREATEDLL_CXX_SRC_FILES})
    GET_TARGET_PROPERTY(CREATEDLL_COMMAND ${CREATEDLL_TARGET_NAME} LOCATION)

    # ilmHalf
    SET(HALF_CXX_SRC_FILES)
    LIST(APPEND HALF_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Half/half.cpp")

    SET(HALF_CXX_HDR_FILES)
    LIST(APPEND HALF_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Half/halfFunction.h")
    LIST(APPEND HALF_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Half/half.h")
    LIST(APPEND HALF_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Half/halfLimits.h")
    LIST(APPEND HALF_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/config.windows/IlmBaseConfig.h")

    # ilmIex
    SET(IEX_CXX_SRC_FILES)
    LIST(APPEND IEX_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Iex/IexBaseExc.cpp")
    LIST(APPEND IEX_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Iex/IexThrowErrnoExc.cpp")

    SET(IEX_CXX_HDR_FILES)
    LIST(APPEND IEX_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Iex/IexBaseExc.h")
    LIST(APPEND IEX_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Iex/IexErrnoExc.h")
    LIST(APPEND IEX_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Iex/Iex.h")
    LIST(APPEND IEX_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Iex/IexMacros.h")
    LIST(APPEND IEX_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Iex/IexMathExc.h")
    LIST(APPEND IEX_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Iex/IexThrowErrnoExc.h")
    
    # ilmImath
    SET(IMATH_CXX_SRC_FILES)
    LIST(APPEND IMATH_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Imath/ImathBox.cpp")
    LIST(APPEND IMATH_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Imath/ImathColorAlgo.cpp")
    LIST(APPEND IMATH_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Imath/ImathFun.cpp")
    LIST(APPEND IMATH_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Imath/ImathMatrixAlgo.cpp")
    LIST(APPEND IMATH_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Imath/ImathRandom.cpp")
    LIST(APPEND IMATH_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Imath/ImathShear.cpp")
    LIST(APPEND IMATH_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/Imath/ImathVec.cpp")

    SET(IMATH_CXX_HDR_FILES)
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathBoxAlgo.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathBox.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathColorAlgo.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathColor.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathEuler.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathExc.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathFrame.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathFrustum.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathFun.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathHalfLimits.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathInt64.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathInterval.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathLimits.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathLineAlgo.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathLine.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathMath.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathMatrixAlgo.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathMatrix.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathPlane.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathPlatform.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathQuat.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathRandom.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathRoots.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathShear.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathSphere.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathVecAlgo.h")
    LIST(APPEND IMATH_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/Imath/ImathVec.h")

    # ilmThread
    SET(ILMTHREAD_CXX_SRC_FILES)
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThread.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadMutex.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadMutexPosix.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadMutexWin32.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadPool.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadPosix.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadSemaphore.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadSemaphorePosixCompat.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadSemaphorePosix.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadSemaphoreWin32.cpp")
    LIST(APPEND ILMTHREAD_CXX_SRC_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadWin32.cpp")

    SET(ILMTHREAD_CXX_HDR_FILES)
    LIST(APPEND ILMTHREAD_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThread.h")
    LIST(APPEND ILMTHREAD_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadMutex.h")
    LIST(APPEND ILMTHREAD_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadPool.h")
    LIST(APPEND ILMTHREAD_CXX_HDR_FILES "${ILMBASE_SRC_DIR}/IlmThread/IlmThreadSemaphore.h")

    # ilmImf
    SET(ILMIMF_CXX_SRC_FILES)
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/b44ExpLogTable.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfAcesFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfB44Compressor.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfBoxAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfChannelListAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfChannelList.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfChromaticitiesAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfChromaticities.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfCompressionAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfCompressor.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfConvert.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfCRgbaFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfDoubleAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfEnvmapAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfEnvmap.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfFloatAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfFrameBuffer.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfFramesPerSecond.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfHeader.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfHuf.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfInputFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfIntAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfIO.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfKeyCodeAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfKeyCode.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfLineOrderAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfLut.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfMatrixAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfMisc.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfMultiView.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfOpaqueAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfOutputFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPizCompressor.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPreviewImageAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPreviewImage.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPxr24Compressor.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRationalAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRational.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRgbaFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRgbaYca.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRleCompressor.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfScanLineInputFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfStandardAttributes.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfStdIO.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfStringAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfStringVectorAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTestFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfThreading.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTileDescriptionAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTiledInputFIle.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTiledMisc.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTiledOutputFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTiledRgbaFile.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTileOffsets.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTimeCodeAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTimeCode.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfVecAttribute.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfVersion.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfWav.cpp")
    LIST(APPEND ILMIMF_CXX_SRC_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfZipCompressor.cpp")

    SET(ILMIMF_CXX_HDR_FILES)
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfAcesFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfArray.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfAutoArray.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfB44Compressor.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfBoxAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfChannelListAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfChannelList.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfCheckedArithmetic.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfChromaticitiesAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfChromaticities.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfCompressionAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfCompression.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfCompressor.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfConvert.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfCRgbaFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfDoubleAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfEnvmapAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfEnvmap.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfFloatAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfFrameBuffer.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfFramesPerSecond.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfHeader.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfHuf.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfInputFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfInt64.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfIntAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfIO.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfKeyCodeAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfKeyCode.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfLineOrderAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfLineOrder.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfLut.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfMatrixAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfMisc.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfMultiView.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfName.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfOpaqueAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfOutputFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPixelType.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPizCompressor.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPreviewImageAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPreviewImage.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfPxr24Compressor.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRationalAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRational.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRgbaFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRgba.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRgbaYca.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfRleCompressor.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfScanLineInputFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfStandardAttributes.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfStdIO.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfStringAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfStringVectorAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTestFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfThreading.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTileDescriptionAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTileDescription.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTiledInputFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTiledMisc.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTiledOutputFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTiledRgbaFile.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTileOffsets.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTimeCodeAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfTimeCode.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfVecAttribute.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfVersion.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfWav.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfXdr.h")
    LIST(APPEND ILMIMF_CXX_HDR_FILES "${OPENEXR_SRC_DIR}/IlmImf/ImfZipCompressor.h")

    INCLUDE_DIRECTORIES("${CMAKE_CURRENT_BINARY_DIR}")
    INCLUDE_DIRECTORIES("${ILMBASE_SRC_DIR}/config.windows")
    INCLUDE_DIRECTORIES("${ILMBASE_SRC_DIR}/Half")
    INCLUDE_DIRECTORIES("${ILMBASE_SRC_DIR}/Iex")
    INCLUDE_DIRECTORIES("${ILMBASE_SRC_DIR}/Imath")
    INCLUDE_DIRECTORIES("${ILMBASE_SRC_DIR}/IlmThread")
    INCLUDE_DIRECTORIES("${OPENEXR_SRC_DIR}/config.windows")
    INCLUDE_DIRECTORIES("${OPENEXR_SRC_DIR}/IlmImf")
    INCLUDE_DIRECTORIES("${ZLIB_SRC_DIR}")

    IF(BUILD_SHARED_LIBS)
        # ilmHalf
        ADD_LIBRARY(${HALF_TARGET_NAME_SHARED} SHARED ${HALF_CXX_SRC_FILES})
        SET_TARGET_PROPERTIES(${HALF_TARGET_NAME_SHARED}  PROPERTIES
            DEFINE_SYMBOL "OPENEXR_DLL;HALF_EXPORTS"
            DEBUG_POSTFIX "d")

        ADD_DEPENDENCIES(${HALF_TARGET_NAME_SHARED} HALF_GENERATED_FILES)

        INSTALL(TARGETS ${HALF_TARGET_NAME_SHARED}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})

        # ilmIex
        ADD_LIBRARY(${IEX_TARGET_NAME_SHARED} SHARED ${IEX_CXX_SRC_FILES})
        SET_TARGET_PROPERTIES(${IEX_TARGET_NAME_SHARED}  PROPERTIES
            DEFINE_SYMBOL "OPENEXR_DLL"
            DEBUG_POSTFIX "d"
            LINK_FLAGS    "/MAP /MAPINFO:EXPORTS"
            LINK_FLAGS_RELEASE "/DEBUG")
        GET_TARGET_PROPERTY(IEX_MAP_FILE ${IEX_TARGET_NAME_SHARED} LOCATION)
        STRING(REGEX REPLACE ".dll$" ".map" IEX_MAP_FILE "${IEX_MAP_FILE}")
        GET_TARGET_PROPERTY(IEX_LIB_FILE ${IEX_TARGET_NAME_SHARED} LOCATION)
        STRING(REGEX REPLACE ".dll$" ".lib" IEX_LIB_FILE "${IEX_LIB_FILE}")

        ADD_CUSTOM_COMMAND(
            TARGET  ${IEX_TARGET_NAME_SHARED} POST_BUILD
            COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/runCreateDLL.bat"
                    "${CREATEDLL_COMMAND}"
                    "${IEX_TARGET_NAME_SHARED}"
                    "$<CONFIGURATION>"
                    "x64"
            COMMENT "Generating exports: ${IEX_TARGET_NAME_SHARED}")

        INSTALL(TARGETS ${IEX_TARGET_NAME_SHARED}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})

        # ilmImath
        ADD_LIBRARY(${IMATH_TARGET_NAME_SHARED} SHARED ${IMATH_CXX_SRC_FILES})
        TARGET_LINK_LIBRARIES(${IMATH_TARGET_NAME_SHARED} ${IEX_TARGET_NAME_SHARED})
        SET_TARGET_PROPERTIES(${IMATH_TARGET_NAME_SHARED}  PROPERTIES
            DEFINE_SYMBOL "OPENEXR_DLL;IMATH_EXPORTS"
            DEBUG_POSTFIX "d"
            LINK_FLAGS    "/MAP /MAPINFO:EXPORTS"
            LINK_FLAGS_RELEASE "/DEBUG")
        GET_TARGET_PROPERTY(IMATH_MAP_FILE ${IMATH_TARGET_NAME_SHARED} LOCATION)
        STRING(REGEX REPLACE ".dll$" ".map" IMATH_MAP_FILE "${IMATH_MAP_FILE}")
        GET_TARGET_PROPERTY(IMATH_LIB_FILE ${IMATH_TARGET_NAME_SHARED} LOCATION)
        STRING(REGEX REPLACE ".dll$" ".lib" IMATH_LIB_FILE "${IMATH_LIB_FILE}")

        ADD_CUSTOM_COMMAND(
            TARGET  ${IMATH_TARGET_NAME_SHARED} POST_BUILD
            COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/runCreateDLL.bat"
                    "${CREATEDLL_COMMAND}"
                    "${IMATH_TARGET_NAME_SHARED}"
                    "$<CONFIGURATION>"
                    "x64"
            COMMENT "Generating exports: ${IMATH_TARGET_NAME_SHARED}")

        INSTALL(TARGETS ${IMATH_TARGET_NAME_SHARED}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})

        # ilmThread
        ADD_LIBRARY(${ILMTHREAD_TARGET_NAME_SHARED} SHARED ${ILMTHREAD_CXX_SRC_FILES})
        TARGET_LINK_LIBRARIES(${ILMTHREAD_TARGET_NAME_SHARED} ${IEX_TARGET_NAME_SHARED})
        SET_TARGET_PROPERTIES(${ILMTHREAD_TARGET_NAME_SHARED}  PROPERTIES
            DEFINE_SYMBOL "OPENEXR_DLL;ILMTHREAD_EXPORTS"
            DEBUG_POSTFIX "d"
            LINK_FLAGS    "/MAP /MAPINFO:EXPORTS"
            LINK_FLAGS_RELEASE "/DEBUG")
        GET_TARGET_PROPERTY(ILMTHREAD_MAP_FILE ${ILMTHREAD_TARGET_NAME_SHARED} LOCATION)
        STRING(REGEX REPLACE ".dll$" ".map" ILMTHREAD_MAP_FILE "${ILMTHREAD_MAP_FILE}")
        GET_TARGET_PROPERTY(ILMTHREAD_LIB_FILE ${ILMTHREAD_TARGET_NAME_SHARED} LOCATION)
        STRING(REGEX REPLACE ".dll$" ".lib" ILMTHREAD_LIB_FILE "${ILMTHREAD_LIB_FILE}")

        ADD_CUSTOM_COMMAND(
            TARGET  ${ILMTHREAD_TARGET_NAME_SHARED} POST_BUILD
            COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/runCreateDLL.bat"
                    "${CREATEDLL_COMMAND}"
                    "${ILMTHREAD_TARGET_NAME_SHARED}"
                    "$<CONFIGURATION>"
                    "x64"
            COMMENT "Generating exports: ${ILMTHREAD_TARGET_NAME_SHARED}")

        INSTALL(TARGETS ${ILMTHREAD_TARGET_NAME_SHARED}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})

        # ilmImf
        ADD_LIBRARY(${ILMIMF_TARGET_NAME_SHARED} SHARED ${ILMIMF_CXX_SRC_FILES})
        TARGET_LINK_LIBRARIES(${ILMIMF_TARGET_NAME_SHARED} ${HALF_TARGET_NAME_SHARED})
        TARGET_LINK_LIBRARIES(${ILMIMF_TARGET_NAME_SHARED} ${IEX_TARGET_NAME_SHARED})
        TARGET_LINK_LIBRARIES(${ILMIMF_TARGET_NAME_SHARED} ${IMATH_TARGET_NAME_SHARED})
        TARGET_LINK_LIBRARIES(${ILMIMF_TARGET_NAME_SHARED} ${ILMTHREAD_TARGET_NAME_SHARED})
        TARGET_LINK_LIBRARIES(${ILMIMF_TARGET_NAME_SHARED} ${ZLIB_TARGET_NAME_SHARED})
        SET_TARGET_PROPERTIES(${ILMIMF_TARGET_NAME_SHARED}  PROPERTIES
            DEFINE_SYMBOL "OPENEXR_DLL;ILMIMF_EXPORTS"
            DEBUG_POSTFIX "d"
            LINK_FLAGS    "/MAP /MAPINFO:EXPORTS"
            LINK_FLAGS_RELEASE "/DEBUG")
        GET_TARGET_PROPERTY(ILMIMF_MAP_FILE ${ILMIMF_TARGET_NAME_SHARED} LOCATION)
        STRING(REGEX REPLACE ".dll$" ".map" ILMIMF_MAP_FILE "${ILMIMF_MAP_FILE}")
        GET_TARGET_PROPERTY(ILMIMF_LIB_FILE ${ILMIMF_TARGET_NAME_SHARED} LOCATION)
        STRING(REGEX REPLACE ".dll$" ".lib" ILMIMF_LIB_FILE "${ILMIMF_LIB_FILE}")

        ADD_CUSTOM_COMMAND(
            TARGET  ${ILMIMF_TARGET_NAME_SHARED} POST_BUILD
            COMMAND "${CMAKE_CURRENT_SOURCE_DIR}/runCreateDLL.bat"
                    "${CREATEDLL_COMMAND}"
                    "${ILMIMF_TARGET_NAME_SHARED}"
                    "$<CONFIGURATION>"
                    "x64"
                    "${CMAKE_BINARY_DIR}/zlib"
            COMMENT "Generating exports: ${ILMIMF_TARGET_NAME_SHARED}")

        INSTALL(TARGETS ${ILMIMF_TARGET_NAME_SHARED}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})
    ENDIF(BUILD_SHARED_LIBS)

    IF(BUILD_STATIC_LIBS)
        # ilmHalf
        ADD_LIBRARY(${HALF_TARGET_NAME_STATIC} STATIC ${HALF_CXX_SRC_FILES})

        SET_TARGET_PROPERTIES(${HALF_TARGET_NAME_STATIC}  PROPERTIES
            DEBUG_POSTFIX "d")

        ADD_DEPENDENCIES(${HALF_TARGET_NAME_STATIC} HALF_GENERATED_FILES)

        INSTALL(TARGETS ${HALF_TARGET_NAME_STATIC}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})

        # ilmIex
        ADD_LIBRARY(${IEX_TARGET_NAME_STATIC} STATIC ${IEX_CXX_SRC_FILES})
        SET_TARGET_PROPERTIES(${IEX_TARGET_NAME_STATIC}  PROPERTIES
            DEBUG_POSTFIX "d")

        INSTALL(TARGETS ${IEX_TARGET_NAME_STATIC}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})

        # ilmImath
        ADD_LIBRARY(${IMATH_TARGET_NAME_STATIC} STATIC ${IMATH_CXX_SRC_FILES})
        SET_TARGET_PROPERTIES(${IMATH_TARGET_NAME_STATIC}  PROPERTIES
            DEBUG_POSTFIX "d")

        INSTALL(TARGETS ${IMATH_TARGET_NAME_STATIC}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})

        # ilmThread
        ADD_LIBRARY(${ILMTHREAD_TARGET_NAME_STATIC} STATIC ${ILMTHREAD_CXX_SRC_FILES})
        SET_TARGET_PROPERTIES(${ILMTHREAD_TARGET_NAME_STATIC}  PROPERTIES
            DEBUG_POSTFIX "d")

        INSTALL(TARGETS ${ILMTHREAD_TARGET_NAME_STATIC}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})

        # ilmThread
        ADD_LIBRARY(${ILMIMF_TARGET_NAME_STATIC} STATIC ${ILMIMF_CXX_SRC_FILES})
        SET_TARGET_PROPERTIES(${ILMIMF_TARGET_NAME_STATIC}  PROPERTIES
            DEBUG_POSTFIX "d")

        INSTALL(TARGETS ${ILMIMF_TARGET_NAME_STATIC}
            CONFIGURATIONS Release Debug
            RUNTIME DESTINATION ${OPENEXR_RUNTIME_INSTALL_DIR}
            LIBRARY DESTINATION ${OPENEXR_LIBRARY_INSTALL_DIR}
            ARCHIVE DESTINATION ${OPENEXR_ARCHIVE_INSTALL_DIR})
    ENDIF(BUILD_STATIC_LIBS)

    INSTALL(FILES ${HALF_CXX_HDR_FILES}
                  ${IEX_CXX_HDR_FILES}
                  ${IMATH_CXX_HDR_FILES}
                  ${ILMTHREAD_CXX_HDR_FILES}
                  ${ILMIMF_CXX_HDR_FILES}
        DESTINATION ${OPENEXR_HEADER_INSTALL_DIR}
        PERMISSIONS OWNER_READ OWNER_WRITE
                    GROUP_READ
                    WORLD_READ)

ELSE(OPENEXR_SRC_DIR AND ILMBASE_SRC_DIR)
    MESSAGE(STATUS "OPENEXR_SRC_DIR or ILMBASE_SRC_DIR not set - can not build OpenEXR")
ENDIF(OPENEXR_SRC_DIR AND ILMBASE_SRC_DIR)
